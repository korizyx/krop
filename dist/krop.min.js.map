{"version":3,"file":"krop.min.js","sources":["../lib/structures/RequestManager.js","../lib/functions/HTTP2.js","../lib/functions/Request.js","../lib/functions/HTTP.js","../lib/functions/HTTPS.js","../lib/structures/Session.js","../lib/Index.js"],"sourcesContent":["\"use strict\";\r\n\r\nimport { request } from \"http\";\r\nimport { Agent } from \"https\";\r\nimport { constants } from \"http2\";\r\n\r\nconst {\r\n  HTTP2_HEADER_PATH,\r\n  HTTP2_HEADER_METHOD,\r\n  HTTP2_HEADER_SCHEME,\r\n  HTTP2_HEADER_AUTHORITY,\r\n} = constants;\r\n\r\nclass RequestManager {\r\n  constructor() {\r\n    this.midia_types = [\"image\", \"video\", \"audio\", \"font\"];\r\n  }\r\n\r\n  proxyParse(text) {\r\n    var input = text;\r\n\r\n    const protocol = input.split(\"://\")[0];\r\n\r\n    if (input.includes(\"@\"))\r\n      input = input.substring(input.lastIndexOf(\"@\") + 1);\r\n    else if (input.includes(\"://\")) input = input.split(\"://\")[1];\r\n\r\n    const host = input.split(\":\")[0];\r\n    const port = parseInt(input.split(\":\")[1]);\r\n\r\n    input = text.split(\"://\")[1];\r\n\r\n    input = text.substring(0, text.lastIndexOf(\"@\"));\r\n    const [username, password] = input.split(\":\");\r\n\r\n    return { host, port, protocol: protocol || \"https\", username, password };\r\n  }\r\n\r\n  proxyTunnel(url, proxy, headers = {}, timeout = 15000) {\r\n    return new Promise((resolve, reject) => {\r\n      const urlParsed = new URL(url);\r\n      const parsed_proxy =\r\n        typeof proxy == \"object\" ? proxy : this.proxyParse(proxy);\r\n\r\n      if (parsed_proxy.username) {\r\n        headers[\"Proxy-Authorization\"] =\r\n          \"Basic \" +\r\n          Buffer.from(\r\n            parsed_proxy.username + \":\" + parsed_proxy.password\r\n          ).toString(\"base64\");\r\n      }\r\n\r\n      request({\r\n        host: parsed_proxy.host,\r\n        port: parsed_proxy.port,\r\n        method: \"CONNECT\",\r\n        maxVersion: \"TLSv1.3\",\r\n        path: `${urlParsed.hostname}:${urlParsed.port ? urlParsed.port : 443}`,\r\n        timeout,\r\n        headers,\r\n      })\r\n        .on(\"connect\", (response, socket) => {\r\n          if (response.statusCode == 200) {\r\n            resolve(socket);\r\n          } else {\r\n            reject(response);\r\n          }\r\n        })\r\n        .on(\"error\", (err) => reject(err))\r\n        .on(\"timeout\", (err) => reject(\"timeout to connect in proxy\"))\r\n        .end();\r\n    });\r\n  }\r\n\r\n  parseResponseData(arr_data, headers) {\r\n    const buffer = Buffer.concat(arr_data);\r\n    var data;\r\n\r\n    try {\r\n      data = JSON.parse(buffer.toString());\r\n    } catch (error) {\r\n      if (\r\n        headers[\"content-type\"] &&\r\n        this.midia_types.some((type) => headers[\"content-type\"].includes(type))\r\n      ) {\r\n        data = buffer;\r\n      } else {\r\n        data = buffer.toString();\r\n      }\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  async parseOptions(options = {}) {\r\n    const parsed_url = new URL(options.url);\r\n\r\n    const buffer = Buffer.from(\r\n      typeof options.payload == \"object\"\r\n        ? JSON.stringify(options.payload)\r\n        : typeof options.payload != \"string\" && options.payload\r\n        ? String(options.payload)\r\n        : options.payload || \"\"\r\n    );\r\n\r\n    if (options.http2) {\r\n      if (options.proxy) {\r\n        options.socket = await this.proxyTunnel(options.url, options.proxy);\r\n      }\r\n\r\n      return {\r\n        url: options.url,\r\n        payload: buffer,\r\n        client: {\r\n          maxVersion: \"TLSv1.3\",\r\n          ALPNProtocols: [\"h2\", \"http/1.1\"],\r\n          socket: options.socket,\r\n        },\r\n        request: {\r\n          [HTTP2_HEADER_AUTHORITY]: parsed_url.host,\r\n          [HTTP2_HEADER_PATH]: parsed_url.pathname + parsed_url.search || \"/\",\r\n          [HTTP2_HEADER_SCHEME]: parsed_url.protocol.split(\":\")[0],\r\n          [HTTP2_HEADER_METHOD]:\r\n            constants[`HTTP2_METHOD_${options.method?.toUpperCase()}`],\r\n          \"Content-Type\": \"text/plain\",\r\n          \"Content-Length\": buffer.length,\r\n          Accept: \"*/*, image/*\",\r\n          ...options?.headers,\r\n        },\r\n      };\r\n    } else {\r\n      if (options.proxy) {\r\n        options.agent = new Agent({\r\n          socket: await this.proxyTunnel(options.url, options.proxy).catch(\r\n            (error) => {\r\n              throw error;\r\n            }\r\n          ),\r\n          keepAlive: true,\r\n        });\r\n      } else {\r\n        options.agent = new Agent(options);\r\n      }\r\n\r\n      return {\r\n        url: options.url,\r\n        payload: buffer,\r\n        request: {\r\n          origin: parsed_url.origin,\r\n          href: parsed_url.href,\r\n          protocol: parsed_url.protocol || \"https:\",\r\n          hostname: parsed_url.hostname,\r\n          path: parsed_url.pathname + parsed_url.search || \"/\",\r\n          port: parsed_url.port || 443,\r\n          method: options.method?.toUpperCase() || \"GET\",\r\n          maxVersion: \"TLSv1.3\",\r\n          timeout: options.timeout || 15000,\r\n          headers: {\r\n            accept: \"application/json, text/plain, image/*, */*\",\r\n            \"accept-language\": \"en-US,en;q=0.9\",\r\n            \"Content-Length\": buffer.length,\r\n            ...options?.headers,\r\n          },\r\n          ...options,\r\n        },\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport default new RequestManager();\r\n","import { connect, constants } from \"http2\";\r\nimport RequestManager from \"../structures/RequestManager.js\";\r\n\r\nconst { HTTP2_HEADER_STATUS } = constants;\r\n\r\nexport default function HTTP2(options) {\r\n  return new Promise(async (resolve) => {\r\n    const parsed_options = await RequestManager.parseOptions(options);\r\n    const clientSession = connect(\r\n      new URL(parsed_options.url),\r\n      parsed_options.client\r\n    );\r\n\r\n    const req = clientSession.request(parsed_options.request);\r\n\r\n    req.once(\"response\", (headers) => {\r\n      const response_data = [];\r\n\r\n      req.on(\"data\", (chunk) => {\r\n        response_data.push(chunk);\r\n      });\r\n\r\n      req.once(\"error\", console.log);\r\n\r\n      req.on(\"end\", async () => {\r\n        req.destroy();\r\n        clientSession.destroy();\r\n\r\n        resolve({\r\n          status: headers[HTTP2_HEADER_STATUS],\r\n          headers,\r\n          data: Buffer.concat(response_data), //RequestManager.parseResponseData(response_data, headers),\r\n        });\r\n      });\r\n    });\r\n\r\n    if (parsed_options.payload?.length > 0) req.write(parsed_options.payload);\r\n\r\n    if (!req.readableEnded) req.end();\r\n  });\r\n}\r\n","\"use strict\";\r\n\r\nimport __HTTP from \"./HTTP.js\";\r\nimport __HTTPS from \"./HTTPS.js\";\r\nimport __HTTP2 from \"./HTTP2.js\";\r\n\r\nfunction Request(...args) {\r\n  const url = args.find((v) => typeof v == \"string\") || \"\";\r\n  const options = args.find((v) => typeof v == \"object\") || {};\r\n\r\n  if (!options?.url) options.url = url;\r\n\r\n  options.url.includes(\"http:\") || options.url.includes(\"https:\")\r\n    ? null\r\n    : (options.url = `https://${options.url}`);\r\n\r\n  return options.http2\r\n    ? __HTTP2(options)\r\n    : options.url.includes(\"http:\")\r\n    ? __HTTP(options)\r\n    : __HTTPS(options);\r\n}\r\n\r\nexport default Request;\r\n","\"use strict\";\r\n\r\nimport { request } from \"http\";\r\nimport RequestManager from \"../structures/RequestManager.js\";\r\n\r\nexport default function HTTP(options = {}) {\r\n  return new Promise(async (resolve, reject) => {\r\n    const parsed_options = await RequestManager.parseOptions(options);\r\n\r\n    delete parsed_options.request.agent;\r\n\r\n    if (parsed_options.request.port == 443) {\r\n      delete parsed_options.request.port;\r\n    }\r\n\r\n    const req = request(parsed_options.request, (res) => {\r\n      const response_data = [];\r\n\r\n      res.on(\"data\", (chunk) => {\r\n        response_data.push(chunk);\r\n      });\r\n\r\n      res.on(\"end\", () => {\r\n        res.status = res.statusCode;\r\n        res.data = RequestManager.parseResponseData(response_data, res.headers);\r\n\r\n        resolve(res);\r\n      });\r\n    }).on(\"error\", (error) => {\r\n      reject(error);\r\n    });\r\n\r\n    if (parsed_options.payload?.length > 0) req.write(parsed_options.payload);\r\n\r\n    req.end();\r\n  });\r\n}\r\n","\"use strict\";\r\n\r\nimport { request } from \"https\";\r\nimport RequestManager from \"../structures/RequestManager.js\";\r\n\r\nexport default function HTTPS(options) {\r\n  return new Promise(async (resolve, reject) => {\r\n    const parsed_options = await RequestManager.parseOptions(options);\r\n\r\n    const req = request(parsed_options.request, (res) => {\r\n      const response_data = [];\r\n\r\n      res.on(\"data\", (chunk) => {\r\n        response_data.push(chunk);\r\n      });\r\n\r\n      res.on(\"end\", () => {\r\n        res.status = res.statusCode;\r\n        res.data = RequestManager.parseResponseData(response_data, res.headers);\r\n\r\n        resolve(res);\r\n      });\r\n    }).on(\"error\", (error) => {\r\n      reject(error);\r\n    });\r\n\r\n    if (parsed_options.payload?.length > 0) req.write(parsed_options.payload);\r\n\r\n    req.end();\r\n  });\r\n}\r\n","\"use strict\";\r\n\r\nimport Request from \"../functions/Request.js\";\r\n\r\nclass Session {\r\n  constructor(default_options = {}) {\r\n    this.default_options = default_options;\r\n    this.cookies = \"\";\r\n  }\r\n\r\n  async req(...args) {\r\n    const url = args.find((v) => typeof v == \"string\") || \"\";\r\n    const options = args.find((v) => typeof v == \"object\") || {};\r\n\r\n    if (!options?.url) options.url = url;\r\n\r\n    const parsed_options = this.addCookiesInOptions({\r\n      ...this.default_options,\r\n      ...options,\r\n      headers: {\r\n        ...this.default_options?.headers,\r\n        ...options?.headers,\r\n      },\r\n    });\r\n\r\n    const response = await Request(parsed_options);\r\n\r\n    try {\r\n      if (response.headers[\"set-cookie\"]) {\r\n        if (this.cookies) {\r\n          const session_cookies = this.json();\r\n          const response_cookies = this.json(\r\n            response.headers[\"set-cookie\"]\r\n              .map((c) => c.split(\";\")[0])\r\n              .join(\"; \")\r\n          );\r\n\r\n          const interweaving = {\r\n            ...session_cookies,\r\n            ...response_cookies,\r\n          };\r\n\r\n          var str = \"\";\r\n\r\n          for (const key of Object.keys(interweaving)) {\r\n            str += `${key}=${interweaving[key]}; `;\r\n          }\r\n\r\n          this.cookies = str.slice(0, -2);\r\n        } else {\r\n          this.cookies = response.headers[\"set-cookie\"]\r\n            .map((c) => c.split(\";\")[0])\r\n            .join(\"; \");\r\n        }\r\n      }\r\n    } catch (error) {}\r\n\r\n    return response;\r\n  }\r\n\r\n  addCookie(cookie) {\r\n    if (typeof cookie == \"object\") {\r\n      if (this.cookies.includes(cookie.name)) {\r\n        return false;\r\n      } else if (this.cookies) {\r\n        this.cookies += `; ${cookie.name}=${cookie.value}`;\r\n\r\n        return true;\r\n      } else {\r\n        this.cookies = `${cookie.name}=${cookie.value}`;\r\n\r\n        return true;\r\n      }\r\n    } else {\r\n      if (this.cookies.includes(cookie.split(\"=\")[0])) {\r\n        return false;\r\n      } else if (this.cookies) {\r\n        this.cookies += `; ${cookie.trim()}`;\r\n\r\n        return true;\r\n      } else {\r\n        this.cookies = `${cookie.trim()}`;\r\n\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  removeCookie(cookie_name) {\r\n    if (this.cookies.includes(cookie_name)) {\r\n      this.cookies = this.cookies.replace(\r\n        this.cookies.slice(this.cookies.indexOf(cookie_name)).split(\" \")[0],\r\n        \"\"\r\n      );\r\n\r\n      return true;\r\n    } else return false;\r\n  }\r\n\r\n  addCookiesInOptions(options) {\r\n    if (this.cookies) {\r\n      if (options.headers && options.headers?.cookie) {\r\n        options.headers.cookie += \"; \" + this.cookies;\r\n      } else {\r\n        options.headers.cookie = this.cookies;\r\n      }\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  json(str) {\r\n    const object = {};\r\n\r\n    for (const cookie of (str || this.cookies).split(\"; \")) {\r\n      const [name, ...value] = cookie.split(\"=\");\r\n\r\n      if (name) {\r\n        object[name] = value.join(\"=\");\r\n      }\r\n    }\r\n    \r\n    return object;\r\n  }\r\n}\r\n\r\nexport default Session;\r\n","import _request from \"./functions/Request.js\";\r\nimport _Session from \"./structures/Session.js\";\r\nimport assert from \"assert\";\r\n\r\n[\r\n  \"get\",\r\n  \"post\",\r\n  \"patch\",\r\n  \"options\",\r\n  \"delete\",\r\n  \"head\",\r\n  \"put\",\r\n  \"link\",\r\n  \"unlink\",\r\n  \"purge\",\r\n].forEach((method) => {\r\n  _request[method] = (options) => _request({ ...options, method });\r\n});\r\n\r\n_request.Session = _Session;\r\nassert.equal(_request.Session, _Session);\r\n\r\nconst request = _request;\r\n\r\nexport default request;\r\n"],"names":["HTTP2_HEADER_PATH","constants","HTTP2_HEADER_METHOD","HTTP2_HEADER_SCHEME","HTTP2_HEADER_AUTHORITY","RequestManager","_classCallCheck","this","midia_types","_parseOptions","_createClass","key","value","text","input","protocol","split","includes","substring","lastIndexOf","host","port","parseInt","_input$split2","_slicedToArray","username","password","url","proxy","_this","headers","arguments","length","undefined","timeout","Promise","resolve","reject","urlParsed","URL","parsed_proxy","_typeof","proxyParse","Buffer","from","toString","request","method","maxVersion","path","concat","hostname","on","response","socket","statusCode","err","end","arr_data","data","buffer","JSON","parse","error","some","type","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","parsed_url","_options$method","_objectSpread2","_options$method2","_args","wrap","_context","prev","next","payload","stringify","String","http2","proxyTunnel","sent","abrupt","client","ALPNProtocols","_objectSpread","_defineProperty","pathname","search","toUpperCase","t0","Agent","t1","t2","keepAlive","agent","origin","href","accept","stop","apply","RequestManager$1","HTTP2_HEADER_STATUS","Request","_len","args","Array","_key","find","v","_ref","_callee2","_parsed_options$paylo","parsed_options","clientSession","req","_context2","parseOptions","connect","once","response_data","chunk","push","console","log","destroy","status","write","readableEnded","_x","__HTTP2","res","parseResponseData","_x2","__HTTP","__HTTPS","Session","default_options","cookies","_req","_this$default_options","session_cookies","response_cookies","interweaving","str","_i","_Object$keys","addCookiesInOptions","json","map","c","join","Object","keys","slice","cookie","name","trim","cookie_name","replace","indexOf","_options$headers","_step","object","_iterator","_createForOfIteratorHelper","s","n","done","_cookie$split2","_toArray","e","f","forEach","_request","_Session","assert","equal"],"mappings":"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"}