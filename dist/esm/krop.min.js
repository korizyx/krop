exports=module.exports=e;import{request as e}from"http";import{Agent as t,request as o}from"https";import{constants as s,connect as n}from"http2";import r from"assert";const{HTTP2_HEADER_PATH:a,HTTP2_HEADER_METHOD:i,HTTP2_HEADER_SCHEME:p,HTTP2_HEADER_AUTHORITY:c}=s;const h=new class{constructor(){this.midia_types=["image","video","audio","font"]}proxyParse(e){var t=e;const o=t.split("://")[0];t.includes("@")?t=t.substring(t.lastIndexOf("@")+1):t.includes("://")&&(t=t.split("://")[1]);const s=t.split(":")[0],n=parseInt(t.split(":")[1]);t=e.split("://")[1],t=e.substring(0,e.lastIndexOf("@"));const[r,a]=t.split(":");return{host:s,port:n,protocol:o||"https",username:r,password:a}}proxyTunnel(t,o,s={},n=15e3){return new Promise(((r,a)=>{const i=new URL(t),p="object"==typeof o?o:this.proxyParse(o);p.username&&(s["Proxy-Authorization"]="Basic "+Buffer.from(p.username+":"+p.password).toString("base64")),e({host:p.host,port:p.port,method:"CONNECT",maxVersion:"TLSv1.3",path:`${i.hostname}:${i.port?i.port:443}`,timeout:n,headers:s}).on("connect",((e,t)=>{200==e.statusCode?r(t):a(e)})).on("error",(e=>a(e))).on("timeout",(e=>a("timeout to connect in proxy"))).end()}))}parseResponseData(e,t){const o=Buffer.concat(e);var s;try{s=JSON.parse(o.toString())}catch(e){s=t["content-type"]&&this.midia_types.some((e=>t["content-type"].includes(e)))?o:o.toString()}return s}async parseOptions(e={}){const o=new URL(e.url),n=Buffer.from("object"==typeof e.payload?JSON.stringify(e.payload):"string"!=typeof e.payload&&e.payload?String(e.payload):e.payload||"");return e.http2?(e.proxy&&(e.socket=await this.proxyTunnel(e.url,e.proxy)),{url:e.url,payload:n,client:{maxVersion:"TLSv1.3",ALPNProtocols:["h2","http/1.1"],socket:e.socket},request:{[c]:o.host,[a]:o.pathname+o.search||"/",[p]:o.protocol.split(":")[0],[i]:s[`HTTP2_METHOD_${e.method?.toUpperCase()}`],"Content-Type":e?.headers&&e?.headers["Content-Type"]?e?.headers["Content-Type"]:"text/plain","Content-Length":n.length,Accept:"*/*, image/*",...e?.headers}}):(e.proxy?e.agent=new t({socket:await this.proxyTunnel(e.url,e.proxy).catch((e=>{throw e})),keepAlive:!0}):e.agent=new t(e),{url:e.url,payload:n,request:{origin:o.origin,href:o.href,protocol:o.protocol||"https:",hostname:o.hostname,path:o.pathname+o.search||"/",port:o.port||443,method:e.method?.toUpperCase()||"GET",maxVersion:"TLSv1.3",timeout:e.timeout||15e3,headers:{accept:"application/json, text/plain, image/*, */*","accept-language":"en-US,en;q=0.9","Content-Length":n.length,...e?.headers},...e}})}};const{HTTP2_HEADER_STATUS:l}=s;function d(t){return t.http2?function(e){return new Promise((async t=>{const o=await h.parseOptions(e),s=n(new URL(o.url),o.client),r=s.request(o.request);r.on("response",(e=>{const o=[];r.on("data",(e=>{o.push(e)})),r.on("end",(()=>{r.close(),s.close(),t({status:e[l],headers:e,data:h.parseResponseData(o,e)})}))})),o.payload?.length>0&&r.write(o.payload),r.end()}))}(t):t.url.includes("http:")?function(t={}){return new Promise((async(o,s)=>{const n=await h.parseOptions(t);delete n.request.agent,443==n.request.port&&delete n.request.port;const r=e(n.request,(e=>{const t=[];e.on("data",(e=>{t.push(e)})),e.on("end",(()=>{e.data=h.parseResponseData(t,e.headers),o(e)}))})).on("error",(e=>{s(e)}));n.payload?.length>0&&r.write(n.payload),r.end()}))}(t):function(e){return new Promise((async(t,s)=>{const n=await h.parseOptions(e),r=o(n.request,(e=>{const o=[];e.on("data",(e=>{o.push(e)})),e.on("end",(()=>{e.data=h.parseResponseData(o,e.headers),t(e)}))})).on("error",(e=>{s(e)}));n.payload?.length>0&&r.write(n.payload),r.end()}))}(t)}class u{constructor(e={}){this.default_options=e,this.cookies=""}async req(...e){const t=e.find((e=>"string"==typeof e))||"",o=e.find((e=>"object"==typeof e))||{};o?.url||(o.url=t);const s=this.addCookiesInOptions({...this.default_options,...o,headers:{...this.default_options?.headers,...o?.h}}),n=await d(s);try{n.headers["set-cookie"]&&(this.cookies?this.cookies+="; "+n.headers["set-cookie"].map((e=>e.split(";")[0])).join("; "):this.cookies=n.headers["set-cookie"].map((e=>e.split(";")[0])).join("; "))}catch(e){}return n}addCookie(e){return"object"==typeof e?!this.cookies.includes(e.name)&&(this.cookies?(this.cookies+=`; ${e.name}=${e.value}`,!0):(this.cookies=`${e.name}=${e.value}`,!0)):!this.cookies.includes(e.split("=")[0])&&(this.cookies?(this.cookies+=`; ${e.trim()}`,!0):(this.cookies=`${e.trim()}`,!0))}removeCookie(e){return!!this.cookies.includes(e)&&(this.cookies=this.cookies.replace(this.cookies.slice(this.cookies.indexOf(e)).split(" ")[0],""),!0)}addCookiesInOptions(e){return this.cookies&&(e.headers&&e.headers?.cookie?e.headers.cookie+="; "+this.cookies:e.headers.cookie=this.cookies),e}json(){const e={};for(const t of this.cookies.split("; ")){const[o,...s]=t.split("=");o&&(e[o]=s.join("="))}return e}}["get","post","patch","options","delete","head","put","link","unlink","purge"].forEach((e=>{d[e]=t=>d({...t,method:e})})),d.Session=u,r.equal(d.Session,u);const m={request:d,Session:u};export{m as default};
//# sourceMappingURL=krop.min.js.map
